generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String      @id @default(uuid())
  name      String   @db.VarChar(255)
  email     String   @unique(map: "email") @db.VarChar(255)
  password  String?  @db.VarChar(255)
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 
  deletedAt DateTime?
  session session[]
  vehicle vehicle[]
}

model vehicle {
  id        String      @id @default(uuid())
  name        String   @db.VarChar(50)
  numberPlate String @db.VarChar(300)
  userId    String
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 
  deletedAt DateTime?
  user      user        @relation(fields: [userId], references: [id], onDelete: Cascade)
  vehicleLog vehicleLog[]
}

model vehicleLog {
  id        String      @id @default(uuid())
  status String @db.VarChar(300)
  description String 
  vehicleId    String
  date DateTime @default(now())
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 
  deletedAt DateTime?
  vehicle      vehicle        @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
}

model session{
  id        String      @id @default(uuid())
  expiredAt DateTime
  userId    String
  token     String      @unique
  user      user        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum status {
  idle
  trip
  stopped
}